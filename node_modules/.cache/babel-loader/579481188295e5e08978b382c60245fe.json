{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/sumit.gupta/Documents/training/testreact/flightappgit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Collapse,Navbar,NavbarToggler,NavbarBrand,Nav,NavItem,NavLink,UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem,NavbarText}from\"reactstrap\";var Navigator=function Navigator(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var toggle=function toggle(){return setIsOpen(!isOpen);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Navbar,{color:\"light\",light:true,expand:\"md\",children:[/*#__PURE__*/_jsx(NavbarBrand,{href:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(NavbarToggler,{onClick:toggle}),/*#__PURE__*/_jsxs(Collapse,{isOpen:isOpen,navbar:true,children:[/*#__PURE__*/_jsxs(Nav,{className:\"mr-auto\",navbar:true,children:[/*#__PURE__*/_jsx(NavItem,{children:/*#__PURE__*/_jsx(NavLink,{href:\"/aboutus\",children:\"About Us\"})}),/*#__PURE__*/_jsx(NavItem,{children:/*#__PURE__*/_jsx(NavLink,{href:\"/flight\",children:\"Flight\"})})]}),/*#__PURE__*/_jsx(NavbarText,{children:\"Simple Text\"})]})]})});};export default Navigator;","map":{"version":3,"sources":["/Users/sumit.gupta/Documents/training/testreact/flightappgit/src/Navigator.js"],"names":["React","useState","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","NavbarText","Navigator","props","isOpen","setIsOpen","toggle"],"mappings":"2QAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACEC,QADF,CAEEC,MAFF,CAGEC,aAHF,CAIEC,WAJF,CAKEC,GALF,CAMEC,OANF,CAOEC,OAPF,CAQEC,oBARF,CASEC,cATF,CAUEC,YAVF,CAWEC,YAXF,CAYEC,UAZF,KAaO,YAbP,CAeA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,eACCd,QAAQ,CAAC,KAAD,CADT,wCACpBe,MADoB,eACZC,SADY,eAG3B,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAMD,CAAAA,SAAS,CAAC,CAACD,MAAF,CAAf,EAAf,CAEA,mBACE,kCACE,MAAC,MAAD,EAAQ,KAAK,CAAC,OAAd,CAAsB,KAAK,KAA3B,CAA4B,MAAM,CAAC,IAAnC,wBACE,KAAC,WAAD,EAAa,IAAI,CAAC,GAAlB,kBADF,cAEE,KAAC,aAAD,EAAe,OAAO,CAAEE,MAAxB,EAFF,cAGE,MAAC,QAAD,EAAU,MAAM,CAAEF,MAAlB,CAA0B,MAAM,KAAhC,wBACE,MAAC,GAAD,EAAK,SAAS,CAAC,SAAf,CAAyB,MAAM,KAA/B,wBACE,KAAC,OAAD,wBACE,KAAC,OAAD,EAAS,IAAI,CAAC,UAAd,sBADF,EADF,cAIE,KAAC,OAAD,wBACE,KAAC,OAAD,EAAS,IAAI,CAAC,SAAd,oBADF,EAJF,GADF,cAWE,KAAC,UAAD,0BAXF,GAHF,GADF,EADF,CAqBD,CA1BD,CA4BA,cAAeF,CAAAA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n} from \"reactstrap\";\n\nconst Navigator = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">Home</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/aboutus\">About Us</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/flight\">\n                Flight\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <NavbarText>Simple Text</NavbarText>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Navigator;\n"]},"metadata":{},"sourceType":"module"}